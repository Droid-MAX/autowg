#!/bin/bash

set -ueo pipefail
export LC_ALL=C

shopt -s nocasematch
shopt -s extglob

ifname='autowg'
api_endpoint='https://example.com/vpn/v1/register'

[[ -f "/etc/autowg.conf" ]] && source "/etc/autowg.conf"

isverbose() {
	[ -t 2 ]
}

log() {
	echo >&2 "$1"
	return 0
}

setup_interface() {
	ip link add "$1" type wireguard

	wg genkey | wg set "$1" private-key /dev/stdin

	ip link set dev "$1" up
	ip link set dev "$1" mtu 1280
}

peer_alive() {
	local ifname="$1"

	[[ $(wg show "$ifname" latest-handshakes) =~ [^\	]*\	([0-9]+) ]] || return 1

	(( ($(date +%s) - ${BASH_REMATCH[1]}) <= 135 ))
}

get_cfg() {
	local cfg="$1"
	local key="$2"

	echo "$cfg" | grep "^${key}=" | cut -d= -f2-

	return 0
}

flush_peers() {
	local ifname="$1"

	wg show "$ifname" peers | while read -r peer
	do
		wg set "$ifname" peer "$peer" remove
	done
}

get_cfg_default() {
	local cfg="$1"
	local key="$2"
	local default="$3"

	val=$(echo "$cfg" | grep "^${key}=" | cut -d= -f2-)

	if [[ -z "$val" ]]
	then
		echo "$default"
		return 0
	fi

	echo "$val"

	return 0

}

if [[ -d /sys/class/net/"$ifname" ]] && peer_alive "$ifname"
then
	isverbose && log '[.] all good'
	exit 0
fi

if [[ ! -d /sys/class/net/"$ifname" ]]
then
	log "[.] creating '$ifname'"
	setup_interface "$ifname"
fi

pubkey=$(wg show "$ifname" public-key)

log "[.] (re-)registering"
cfg=$(curl -m 3 -sS -d "$pubkey" -E "/factory/device.crt" --key "/factory/device.key" "$api_endpoint")

isverbose && log  "config is:"
isverbose && log  "-----------------"
isverbose && log  "$cfg"
isverbose && log  "-----------------"

flush_peers "$ifname"

wg set "$ifname" \
	peer "$(get_cfg "$cfg" "pubkey")" \
	endpoint "$(get_cfg "$cfg" "endpoint")" \
	persistent-keepalive "$(get_cfg_default "$cfg" "keepalive" 25)" \
	allowed-ips "$(get_cfg "$cfg" "route")"

ip -6 addr flush dev "$ifname"
ip -6 addr add "$(get_cfg "$cfg" "ip")" dev "$ifname"

ip -6 route flush dev "$ifname"
ip -6 route add "$(get_cfg "$cfg" "route")" dev "$ifname"
